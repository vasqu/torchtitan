
[job]
dump_folder = "./outputs"
description = "Flux debug model"
print_args = false
use_for_integration_test = true

[profiling]
enable_profiling = false
save_traces_folder = "profile_trace"
profile_freq = 10
enable_memory_snapshot = false
save_memory_snapshot_folder = "memory_snapshot"

[metrics]
log_freq = 1
disable_color_printing = false
enable_tensorboard = false
save_tb_folder = "tb"
enable_wandb = false

[model]
name = "flux"
flavor = "flux-debug"
norm_type = "rmsnorm"  # layernorm / np_layernorm / rmsnorm
# test tokenizer.model, for debug purpose only
# tokenizer_path = "./tests/assets/test_tiktoken.model"
# converters = "float8"


[optimizer]
name = "AdamW"
lr = 8e-4
eps = 1e-8

[lr_scheduler]
warmup_steps = 2  # lr scheduler warm up, normally 20% of the train steps
decay_ratio = 0.8  # lr scheduler decay ratio, 80% of the train steps
decay_type = "linear"
lr_min = 0.0

[training]
batch_size = 32
seq_len = 512
max_norm = 1.0  # grad norm clipping
steps = 10
compile = false
dataset = "cc12m"
guidance = 3.5
seed = 0

[encoder]
t5_encoder="google/t5-v1_1-small"
clip_encoder="openai/clip-vit-large-patch14"
max_t5_encoding_len=512
auto_encoder_path="torchtitan/experiments/flux/assets/autoencoder/ae.safetensors"  # Autoencoder to use for image

[parallelism]
data_parallel_replicate_degree = 1
data_parallel_shard_degree = 1
fsdp_reshard_after_forward = "default" # default / never / always
tensor_parallel_degree = 1
enable_async_tensor_parallel = false
pipeline_parallel_degree = 1
context_parallel_degree = 1

[experimental]
custom_args_module = "torchtitan.experiments.flux.flux_argparser"
